title:  TCP/IP stack hardening
date:   2014-05-17
author: Aaron

<p>Denial of service (Dos) prevention should be one of the first things that you should do once a new operating system is installed.</p>

<p>If you have a server iptables is the way to go, if you want to prevent DoS on your desktop then ufw will ease the whole process.</p>

<p>Let's begin with small ufw configuration for your desktop pc.</p>

<p>Edit <code>/etc/ufw/sysctl.conf</code></p>

<pre>$root net/ipv4/icmp_echo_ignore_broadcast=1
<p>$root net/ipv4/icmp_ignore_bogus_error_responses=1</p>
<p>$root net/ipv4/icmp_echo_ignore_all=1</p>
<p>$root net/ipv4/default/accept_redirects=0</p>
<p>$root net/ipv4/all/accept_redirects=0</p>
<p>$root net/ipv4/tcp_syncookies=1</p>
<p>$root net/ipv4/conf/default/log_martians=1</p>
<p>$root net/ipv4/conf/all/log_martians=1</p>
<p>$root net/ipv4/conf/default/send_redirects=0</p>
<p>$root net/ipv4/conf/all/send_redirects=0</p>
<p>$root net/ipv4/conf/all/accept_source_route=0</p>
<p>$root net/ipv4/conf/default/accept_source_route=0</p>
<p>$root net/ipv4/conf/default/rp_filter=1</p>
<p>$root net/ipv4/conf/all/rp_filter=1</p></pre>

<p>Restart ufw with <code>ufw disable</code> and then <code>ufw enable</code>, now go to <a href="https://www.grc.com/x/ne.dll?bh0bkyd2" target="_blank">ShieldsUP</a>, click proceed on some of the buttons and look for <strong>All Service Ports</strong>, click it and wait till they scan your ports and you should pass the test with <strong>"TruStealth"</strong> rating.</p>

<p>Moving to iptable rules configuration for your server. I use the same configuration for my centos OwnCloud server, save it as <strong>fw.sh</strong> and then configure the NIC to match yours, mine is <code>eth0</code> yours could be different</p>

<pre>$root #!/bin/bash
<p>$root /sbin/iptables -F</p>
<p>$root /sbin/iptables -X</p>
<p>$root /sbin/iptables -t nat -F</p>
<p>$root /sbin/iptables -t nat -X</p>
<p>$root /sbin/iptables -t mangle -F</p>
<p>$root /sbin/iptables -t mangle -X</p>
<p>$root modprobe ip_conntrack </p>
<p>$root NIC="eth0"  </p>
<p>$root /sbin/iptables -A INPUT -i lo -j ACCEPT</p>
<p>$root /sbin/iptables -A OUTPUT -o lo -j ACCEPT</p>
<p>$root /sbin/iptables -P INPUT DROP</p>
<p>$root /sbin/iptables -P OUTPUT DROP</p>
<p>$root /sbin/iptables -P FORWARD DROP </p>
<p>$root /sbin/iptables -A INPUT -i ${NIC} -p tcp ! --syn -m state --state NEW  -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "Drop Syn" </p>
<p>$root /sbin/iptables -A INPUT -i ${NIC} -p tcp ! --syn -m state --state NEW -j DROP
<p>$root /sbin/iptables -A INPUT -i ${NIC} -f  -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "Fragments Packets"</p>
<p>$root /sbin/iptables -A INPUT -i ${NIC} -f -j DROP  </p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP</p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags ALL ALL -j DROP </p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags ALL NONE -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "NULL Packets"</p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags ALL NONE -j DROP</p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags SYN,RST SYN,RST -j DROP </p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags SYN,FIN SYN,FIN -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "XMAS Packets"</p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP</p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags FIN,ACK FIN -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "Fin Packets Scan"</p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags FIN,ACK FIN -j DROP</p>
<p>$root /sbin/iptables  -A INPUT -i ${NIC} -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP  </p>
<p>$root /sbin/iptables -A INPUT -i ${NIC} -m state --state ESTABLISHED,RELATED -j ACCEPT</p>
<p>$root /sbin/iptables -A OUTPUT -o ${NIC} -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT </p>
<p>$root /sbin/iptables -A INPUT -p tcp --destination-port 22 -j REJECT</p>
<p>$root /sbin/iptables -A OUTPUT -p tcp --sport 22 -j REJECT</p>
<p>$root # Whenever you change the ssh port make sure to uncomment the line below and change the port</p>
<p>$root # iptables -I INPUT 4 -p tcp -d 192.168.10.30 --dport 3789 -j ACCEPT</p>
<p>$root #If you only need remote access from one IP address (say from work to your home server), then consider filtering connections at your firewall by either adding a firewall rule on your router or in iptables to limit access on port 3789 to only that specific IP address. For example, in iptables this could be achieved with the following type of rule:</p>
<p>$root # iptables -A INPUT -p tcp -s 72.232.194.162 --dport 3789 -j ACCEPT </p>
<p>$root /sbin/iptables -A INPUT -p icmp --icmp-type 8 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT</p>
<p>$root /sbin/iptables -A OUTPUT -p icmp --icmp-type 0 -m state --state ESTABLISHED,RELATED -j ACCEPT </p>
<p>$root /sbin/iptables -A INPUT -p tcp -i ${NIC} --dport 137:139 -j REJECT</p>
<p>$root /sbin/iptables -A INPUT -p udp -i ${NIC} --dport 137:139 -j REJECT </p>
<p>$root /sbin/iptables -A INPUT -j LOG</p>
<p>$root /sbin/iptables -A FORWARD -j LOG</p>
<p>$root /sbin/iptables -A INPUT -j DROP</p>
<p>$root echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all</p>
<p>$root echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts</p>
<p>$root echo 1 > /proc/sys/net/ipv4/ip_forward</p>
<p>$root echo 64000 > /proc/sys/net/ipv4/ipfrag_high_thresh</p>
<p>$root echo 48000 > /proc/sys/net/ipv4/ipfrag_low_thresh </p>
<p>$root echo 10 > /proc/sys/net/ipv4/ipfrag_time </p>
<p>$root echo 5 > /proc/sys/net/ipv4/icmp_ratelimit</p>
<p>$root echo 1 > /proc/sys/net/ipv4/tcp_syncookies</p>
<p>$root echo 0 > /proc/sys/net/ipv4/conf/eth0/accept_source_route</p>
<p>$root echo 0 > /proc/sys/net/ipv4/conf/eth0/accept_redirects </p>
<p>$root echo 1 > /proc/sys/net/ipv4/conf/eth0/log_martians </p>
<p>$root echo 10 > /proc/sys/net/ipv4/neigh/eth0/locktime</p>
<p>$root echo 0 > /proc/sys/net/ipv4/conf/eth0/proxy_arp</p>
<p>$root echo 50 > /proc/sys/net/ipv4/neigh/eth0/gc_stale_time</p>
<p>$root echo 0 > /proc/sys/net/ipv4/conf/eth0/send_redirects</p>
<p>$root echo 0 > /proc/sys/net/ipv4/conf/eth0/secure_redirects</p>
<p>$root echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses</p>
<p>$root echo 5 > /proc/sys/net/ipv4/igmp_max_memberships</p>
<p>$root echo 2 > /proc/sys/net/ipv4/igmp_max_msf</p>
<p>$root echo 1024 > /proc/sys/net/ipv4/tcp_max_orphans</p>
<p>$root echo 2 > /proc/sys/net/ipv4/tcp_syn_retries</p>
<p>$root echo 2 > /proc/sys/net/ipv4/tcp_synack_retries</p>
<p>$root echo 1 > /proc/sys/net/ipv4/tcp_abort_on_overflow</p>
<p>$root echo 10 > /proc/sys/net/ipv4/tcp_fin_timeout</p>
<p>$root echo 0 > /proc/sys/net/ipv4/route/redirect_number</p>
<p>$root echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter</p>
<p>$root echo 1 > /proc/sys/net/ipv4/conf/eth0/rp_filter</p>
<p>$root echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route</p>
<p>$root echo 61 > /proc/sys/net/ipv4/ip_default_ttl</p>
<p>$root echo "1800" > /proc/sys/net/ipv4/tcp_keepalive_time</p>
<p>$root echo "0" > /proc/sys/net/ipv4/tcp_window_scaling</p>
<p>$root echo "0" > /proc/sys/net/ipv4/tcp_sack</p>
<p>$root echo 4096 87380 4194304 >/proc/sys/net/ipv4/tcp_rmem</p>
<p>$root echo 4096 87380 4194304 >/proc/sys/net/ipv4/tcp_wmem</p>
<p>$root echo 1 > /proc/sys/net/ipv4/tcp_ecn</p>
<p>$root echo "30000 60000" > /proc/sys/net/ipv4/ip_local_port_range </p>
<p>$root service iptables save</p>
<p>$root service iptables restart</p>
<p>$root exit 0</p></pre>

<p>These iptables rules are really powerful and I won't recommend you to use them for your desktop pc as they will limit a lot of your applications that you use on daily basis.</p>

<p>If you try to ping the server it will show 100% packet loss which means it drops ping requests.</p>

<p>Even if you have open ports, by scanning the server with nmap they will be shown as <strong>closed</strong>, don't believe me ?</p>

<pre># Replace 192.168.10.30 with your server internal ip
<p>$root nmap -sV -O -PN 192.168.10.30</p></pre>
